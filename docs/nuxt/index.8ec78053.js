import{a as k,b as A,r as w,e as y,f as h,h as s,w as x,v as D,i as o,t as u,j as C,F as B,k as M,o as c}from"./entry.03ab3d30.js";const I={class:"h-screen flex flex-row flex-wrap"},E={class:"h-full w-[50vw] p-2 overflow-auto"},R=s("p",{class:"text-2xl font-bold"},"0D Cellular Automata (0D CA)",-1),T=s("p",null,"Small website made to explore the smallest possible cell world.",-1),F=s("p",{class:"mt-10"},[o("Just like "),s("a",{class:"underline",href:"https://en.wikipedia.org/wiki/Elementary_cellular_automaton",target:"_blank",rel:"noopener noreferrer"},"1D ECA"),o(" where we stack 1D states of the world one after another, representing a temporal dimension, this will be stacking 0D worlds, creatings 1D image in the end.")],-1),L=s("p",{class:"mt-10"},"Select amount of states:",-1),U=s("option",{value:"1"},"1",-1),V=s("option",{value:"2"},"2",-1),j=s("option",{value:"3"},"3",-1),G=s("option",{value:"4"},"4",-1),P=[U,V,j,G],$={class:"mt-5"},z={class:"mt-5"},N=s("sup",null,"1",-1),H=s("sup",null,"1",-1),J=s("p",{class:"mt-10 text-lg"},"Properties:",-1),W=s("p",null,[o("Lambda (\u03BB) is a number between 0 and 1 that corresponds to how chaotic the system is with given rules. With \u03BB = 0 the system is stable, nothing is happening, with \u03BB = 1 the system is totally chaotic. Somewhere between those lambdas there is a region called "),s("a",{class:"underline",href:"https://en.wikipedia.org/wiki/Edge_of_chaos",target:"_blank",rel:"noopener noreferrer"},"edge of chaos"),o(". It is a place where the phase shift from order to disorder is happening - the only place where complex structures can exist.")],-1),q=s("p",null,[o("Interestingly, most of the rules are considered a reversible cellular automaton just like "),s("a",{class:"underline",href:"https://en.wikipedia.org/wiki/Critters_(cellular_automaton)",target:"_blank",rel:"noopener noreferrer"},"Critters"),o(" for example. There is only one state that led to the current state and there is only one state that will be next. This also means that all rules are periodic, it's like doing the same moves to the rubrics cube over and over, after some time you will get back to the exact same state.")],-1),K=s("p",null,[s("a",{class:"underline text-xs",href:"https://github.com/ebolblga/0D-Cellular-Automata",target:"_blank",rel:"noopener noreferrer"},"Source code")],-1),O={class:"h-full w-[50vw] p-2 bg-[#f44e38] text-[#1d0f44] flex flex-row overflow-auto"},Q={class:"min-w-[50px] h-full mr-3 text-center"},X={class:"font-bold"},Y={key:0,class:"font-bold mb-1 text-xs"},Z={key:1,class:"font-bold mb-1 text-xs"},ee=["src"],se=k({__name:"index",setup(te){A({title:"0D Cellular Automata"});const r=w(2),f=w(15),p=w(2),g=w();let m=0;const t=[[25,0,0],[86,9,9],[173,32,32],[242,230,230]];y(async()=>{_()});const S=(d,n)=>String(d).padStart(n,"0");async function b(d){let n=f.value;n++;const l=S(d,4),i=document.createElement("canvas");i.width=1,i.height=n;const v=i.getContext("2d");v.fillStyle="rgb(0, 0, 0)",v.fillRect(0,0,i.width,i.height);let e=v.getImageData(0,0,i.width,i.height);e.data[0]=t[m][0],e.data[1]=t[m][1],e.data[2]=t[m][2];for(let a=4;a<e.data.length;a+=4)e.data[a-4]===t[0][0]?String(l).charAt(3)==="0"?(e.data[a]=t[0][0],e.data[a+1]=t[0][1],e.data[a+2]=t[0][2]):String(l).charAt(3)==="1"?(e.data[a]=t[1][0],e.data[a+1]=t[1][1],e.data[a+2]=t[1][2]):String(l).charAt(3)==="2"?(e.data[a]=t[2][0],e.data[a+1]=t[2][1],e.data[a+2]=t[2][2]):String(l).charAt(3)==="3"&&(e.data[a]=t[3][0],e.data[a+1]=t[3][1],e.data[a+2]=t[3][2]):e.data[a-4]===t[1][0]?String(l).charAt(2)==="0"?(e.data[a]=t[0][0],e.data[a+1]=t[0][1],e.data[a+2]=t[0][2]):String(l).charAt(2)==="1"?(e.data[a]=t[1][0],e.data[a+1]=t[1][1],e.data[a+2]=t[1][2]):String(l).charAt(2)==="2"?(e.data[a]=t[2][0],e.data[a+1]=t[2][1],e.data[a+2]=t[2][2]):String(l).charAt(2)==="3"&&(e.data[a]=t[3][0],e.data[a+1]=t[3][1],e.data[a+2]=t[3][2]):e.data[a-4]===t[2][0]?String(l).charAt(1)==="0"?(e.data[a]=t[0][0],e.data[a+1]=t[0][1],e.data[a+2]=t[0][2]):String(l).charAt(1)==="1"?(e.data[a]=t[1][0],e.data[a+1]=t[1][1],e.data[a+2]=t[1][2]):String(l).charAt(1)==="2"?(e.data[a]=t[2][0],e.data[a+1]=t[2][1],e.data[a+2]=t[2][2]):String(l).charAt(1)==="3"&&(e.data[a]=t[3][0],e.data[a+1]=t[3][1],e.data[a+2]=t[3][2]):e.data[a-4]===t[3][0]&&(String(l).charAt(0)==="0"?(e.data[a]=t[0][0],e.data[a+1]=t[0][1],e.data[a+2]=t[0][2]):String(l).charAt(0)==="1"?(e.data[a]=t[1][0],e.data[a+1]=t[1][1],e.data[a+2]=t[1][2]):String(l).charAt(0)==="2"?(e.data[a]=t[2][0],e.data[a+1]=t[2][1],e.data[a+2]=t[2][2]):String(l).charAt(0)==="3"&&(e.data[a]=t[3][0],e.data[a+1]=t[3][1],e.data[a+2]=t[3][2]));return v.putImageData(e,0,0),i.toDataURL()}async function _(){p.value=Math.pow(r.value,Math.pow(r.value,1)),g.value=[],m=Math.floor(Math.random()*r.value);for(let d=0;d<p.value;d++)r.value!=1?g.value.push(await b(parseInt(d.toString(r.value)))):g.value.push(await b(d))}return(d,n)=>(c(),h("div",I,[s("div",E,[R,T,F,L,x(s("select",{"onUpdate:modelValue":n[0]||(n[0]=l=>r.value=l),class:"w-full rounded-lg h-7 bg-[#f44e38] text-[#1d0f44] outline-none",onChange:n[1]||(n[1]=l=>_())},P,544),[[D,r.value]]),s("p",$,[o("Run for steps: "),s("b",null,u(f.value),1)]),x(s("input",{"aria-label":"For how many steps should it be ran?","onUpdate:modelValue":n[2]||(n[2]=l=>f.value=l),type:"range",min:"0",max:"63",class:"w-full h-2 rounded-lg appearance-none cursor-ew-resize bg-[#f44e38] accent-white",onChange:n[3]||(n[3]=l=>_())},null,544),[[C,f.value]]),s("p",z,[o('Again just like in 1D each cell has its "neighborhood", in 0D it consists of only 1 cell. For '),s("b",null,u(r.value),1),o(" states there exists "),s("b",null,[o(u(r.value),1),N,o(" = "+u(Math.pow(r.value,1)),1)]),o(" possible neighborhood states and "),s("b",null,[o(u(r.value),1),s("sup",null,[o(u(r.value),1),H]),o(" = "+u(Math.pow(r.value,Math.pow(r.value,1))),1)]),o(" possible rules. Let's explore all of them!")]),J,W,q,K,s("button",{class:"mt-10 bg-[#f44e38] text-[#1d0f44] p-1 px-2 rounded-full font-bold active:bg-[#1d0f44] active:text-[#f44e38]",onClick:n[4]||(n[4]=l=>_())},"Generate random world")]),s("div",O,[(c(!0),h(B,null,M(g.value,(l,i)=>(c(),h("div",Q,[s("p",X,"Rule "+u(i),1),p.value!=1?(c(),h("p",Y,"\u03BB = "+u(Math.round(i/(p.value-1)*100)/100),1)):(c(),h("p",Z,"\u03BB = 0")),s("img",{src:l,class:"w-full",style:{"image-rendering":"pixelated"}},null,8,ee)]))),256))])]))}});export{se as default};
