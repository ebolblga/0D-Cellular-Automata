import{a as D,b as k,r as p,e as C,f as v,h as e,w as x,v as y,i as n,t as d,j as M,F as A,k as R,o as g}from"./entry.ad8f68c8.js";const S={class:"h-screen flex flex-row flex-wrap"},E={class:"h-full w-[50vw] p-2 overflow-auto"},F=e("p",{class:"text-2xl font-bold"},"0D Cellular Automata (0D CA)",-1),I=e("p",null,"Small website made to explore the smallest possible cell world.",-1),U=e("p",{class:"mt-10"},[n("Just like "),e("a",{class:"underline",href:"https://en.wikipedia.org/wiki/Elementary_cellular_automaton",target:"_blank",rel:"noopener noreferrer"},"1D ECA"),n(" where we stack 1D states of the world one after another, representing a temporal dimension, this will be stacking 0D worlds, creatings 1D image in the end.")],-1),V=e("p",{class:"mt-10"},"Select amount of states:",-1),j=e("option",{value:"1"},"1",-1),B=e("option",{value:"2"},"2",-1),G=[j,B],L={class:"mt-5"},T={class:"mt-5"},$=e("sup",null,"1",-1),N=e("sup",null,"1",-1),P=e("p",{class:"mt-10 text-lg"},"Properties:",-1),z=e("p",null,[n("Interestingly, all of them are considered a reversible cellular automaton just like "),e("a",{class:"underline",href:"https://en.wikipedia.org/wiki/Critters_(cellular_automaton)",target:"_blank",rel:"noopener noreferrer"},"Critters"),n(" for example.")],-1),H={class:"h-full w-[50vw] p-2 bg-[#f44e38] text-[#1d0f44] flex flex-row overflow-auto"},J={class:"min-w-[50px] h-full mr-3"},q={class:"font-bold mb-1"},K=["src"],W=D({__name:"index",setup(O){k({title:"0D Cellular Automata"});const r=p(2),c=p(15),w=p(2),m=p();let h=0;const s=[[102,41,89],[165,99,104],[191,177,162],[240,235,216]];C(async()=>{f()});async function b(i){let o=c.value;o++;const l=document.createElement("canvas");l.width=1,l.height=o;const u=l.getContext("2d");u.fillStyle="rgb(0, 0, 0)",u.fillRect(0,0,l.width,l.height);let t=u.getImageData(0,0,l.width,l.height);t.data[0]=s[h][0],t.data[1]=s[h][1],t.data[2]=s[h][2];for(let a=4;a<t.data.length;a+=4)t.data[a-4]===102?(i&1)===1?(t.data[a]=s[1][0],t.data[a+1]=s[1][1],t.data[a+2]=s[1][2]):(t.data[a]=s[0][0],t.data[a+1]=s[0][1],t.data[a+2]=s[0][2]):t.data[a-4]===165?(i&1)===1?(t.data[a]=s[0][0],t.data[a+1]=s[0][1],t.data[a+2]=s[0][2]):(t.data[a]=s[1][0],t.data[a+1]=s[1][1],t.data[a+2]=s[1][2]):t.data[a-4]===191||t.data[a-4];return u.putImageData(t,0,0),l.toDataURL()}async function f(){w.value=_(Math.pow(r.value,1)),m.value=[],h=Math.floor(Math.random()*r.value);for(let i=0;i<w.value;i++)m.value.push(await b(i))}function _(i){return i!=1?i*_(i-1):1}return(i,o)=>(g(),v("div",S,[e("div",E,[F,I,U,V,x(e("select",{"onUpdate:modelValue":o[0]||(o[0]=l=>r.value=l),class:"w-full rounded-lg h-7 bg-[#f44e38] text-[#1d0f44] outline-none",onChange:o[1]||(o[1]=l=>f())},G,544),[[y,r.value]]),e("p",L,[n("Run for steps: "),e("b",null,d(c.value),1)]),x(e("input",{"aria-label":"For how many steps should it be ran?","onUpdate:modelValue":o[2]||(o[2]=l=>c.value=l),type:"range",min:"0",max:"63",class:"w-full h-2 rounded-lg appearance-none cursor-ew-resize bg-[#f44e38] accent-white",onChange:o[3]||(o[3]=l=>f())},null,544),[[M,c.value]]),e("p",T,[n('Again just like in 1D each cell has its "neighborhood", in 0D it consists of only 1 cell. For '),e("b",null,d(r.value),1),n(" states there exists "),e("b",null,[n(d(r.value),1),$,n(" = "+d(Math.pow(r.value,1)),1)]),n(" possible neighborhood states and "),e("b",null,[n(d(r.value),1),N,n("! = "+d(_(Math.pow(r.value,1))),1)]),n(" possible rules. Let's explore all of them!")]),P,z,e("button",{class:"mt-10 bg-[#f44e38] text-[#1d0f44] p-1 px-2 rounded-full font-bold active:bg-[#1d0f44] active:text-[#f44e38]",onClick:o[4]||(o[4]=l=>f())},"Generate random world")]),e("div",H,[(g(!0),v(A,null,R(m.value,(l,u)=>(g(),v("div",J,[e("p",q,"Rule "+d(u),1),e("img",{src:l,class:"w-full",style:{"image-rendering":"pixelated"}},null,8,K)]))),256))])]))}});export{W as default};
